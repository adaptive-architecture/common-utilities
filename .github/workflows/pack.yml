name: Publish NuGet packages.
on:
  release:
    types: [created]

jobs:
  package:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      config: 'Release'

    steps:
      - uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - id: branch_name
        name: Get branch name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=SOURCE_TAG_TRIMMED::$(echo ${GITHUB_REF#refs/tags/} | sed 's/v//')

      - name: Install dependencies
        run: dotnet restore

      - name: Build Common.Utilities
        run: dotnet build --configuration $config --no-restore ./src/Common.Utilities/Common.Utilities.csproj /p:ContinuousIntegrationBuild=true /p:CI_BUILD=true -p:Version=$SOURCE_TAG_TRIMMED
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG_TRIMMED: ${{ steps.branch_name.outputs.SOURCE_TAG_TRIMMED }}

      - name: Create the Common.Utilities package
        run: |
          echo $SOURCE_NAME
          echo $SOURCE_BRANCH
          echo $SOURCE_TAG_TRIMMED
          dotnet pack --configuration $config ./src/Common.Utilities/Common.Utilities.csproj /p:CI_BUILD=true -p:Version=$SOURCE_TAG_TRIMMED
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG_TRIMMED: ${{ steps.branch_name.outputs.SOURCE_TAG_TRIMMED }}

      - name: Publish the Common.Utilities package to GPR
        run: dotnet nuget push ./src/Common.Utilities/bin/Release/*.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --no-symbols --skip-duplicate

      - name: Push the Common.Utilities package to NuGet
        run: dotnet nuget push ./src/Common.Utilities/bin/Release/*.nupkg --api-key ${{secrets.NUGET_ORG_KEY}} --source https://api.nuget.org/v3/index.json --no-symbols --skip-duplicate

      - name: Change Common.Utilities version
        run: |
          echo $SOURCE_TAG_TRIMMED
          dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name "GitHub Package Registry" "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          sed -i 's/Include="AdaptArch\.Common\.Utilities".*Version=".*"/Include="AdaptArch.Common.Utilities" Version="$SOURCE_TAG_TRIMMED"/' ./src/Common.Utilities.Redis/Common.Utilities.Redis.csproj
          dotnet restore --force
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG_TRIMMED: ${{ steps.branch_name.outputs.SOURCE_TAG_TRIMMED }}

      - name: Build Common.Utilities.Redis
        run: dotnet build --configuration $config --no-restore ./src/Common.Utilities.Redis/Common.Utilities.Redis.csproj /p:ContinuousIntegrationBuild=true /p:CI_BUILD=true -p:Version=$SOURCE_TAG_TRIMMED
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG_TRIMMED: ${{ steps.branch_name.outputs.SOURCE_TAG_TRIMMED }}

      - name: Create the Common.Utilities.Redis package
        run: |
          echo $SOURCE_NAME
          echo $SOURCE_BRANCH
          echo $SOURCE_TAG_TRIMMED
          dotnet pack --configuration $config ./src/Common.Utilities.Redis/Common.Utilities.Redis.csproj /p:CI_BUILD=true -p:Version=$SOURCE_TAG_TRIMMED
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG_TRIMMED: ${{ steps.branch_name.outputs.SOURCE_TAG_TRIMMED }}

      - name: Publish the Common.Utilities.Redis package to GPR
        run: dotnet nuget push ./src/Common.Utilities.Redis/bin/Release/*.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --no-symbols --skip-duplicate

      - name: Push the Common.Utilities.Redis package to NuGet
        run: dotnet nuget push ./src/Common.Utilities.Redis/bin/Release/*.nupkg --api-key ${{secrets.NUGET_ORG_KEY}} --source https://api.nuget.org/v3/index.json --no-symbols --skip-duplicate
