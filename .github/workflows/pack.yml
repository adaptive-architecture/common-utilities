name: Publish NuGet packages.
on:
  release:
    types: [created]

jobs:
  package:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      config: 'Release'

    steps:
      - uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - id: branch_name
        name: Get branch name
        run: |
          echo "SOURCE_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "SOURCE_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "SOURCE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "SOURCE_TAG_TRIMMED=$(echo ${GITHUB_REF#refs/tags/} | sed 's/v//')" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: dotnet restore

      - name: Publish packages
        run: sh ./pipeline/publish-packages.sh

      - name: Publish Common.Utilities
        run: |
          dotnet build --configuration $config --no-restore ./src/Common.Utilities/Common.Utilities.csproj /p:ContinuousIntegrationBuild=true /p:CI_BUILD=true -p:Version=${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}
          dotnet pack --configuration $config ./src/Common.Utilities/Common.Utilities.csproj /p:CI_BUILD=true -p:Version=${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}
          dotnet nuget push ./src/Common.Utilities/bin/Release/*.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --no-symbols --skip-duplicate
          dotnet nuget push ./src/Common.Utilities/bin/Release/*.nupkg --api-key ${{secrets.NUGET_ORG_KEY}} --source https://api.nuget.org/v3/index.json --no-symbols --skip-duplicate

      - name: Change Common.Utilities version
        run: |
          sed -i "s/Include=\"AdaptArch\.Common\.Utilities\".*Version=\".*\"/Include=\"AdaptArch.Common.Utilities\" Version=\"${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}\"/" ./src/Common.Utilities.Configuration/Common.Utilities.Configuration.csproj
          sed -i "s/Include=\"AdaptArch\.Common\.Utilities\".*Version=\".*\"/Include=\"AdaptArch.Common.Utilities\" Version=\"${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}\"/" ./src/Common.Utilities.Hosting/Common.Utilities.Hosting.csproj
          sed -i "s/Include=\"AdaptArch\.Common\.Utilities\".*Version=\".*\"/Include=\"AdaptArch.Common.Utilities\" Version=\"${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}\"/" ./src/Common.Utilities.Redis/Common.Utilities.Redis.csproj

          dotnet nuget add source --name '.local.Common.Utilities' --configfile './nuget.config' './src/Common.Utilities/bin/Release/'
          dotnet restore


      - name: Publish Common.Utilities.Redis
        run: |
          dotnet build --configuration $config ./src/Common.Utilities.Redis/Common.Utilities.Redis.csproj /p:ContinuousIntegrationBuild=true /p:CI_BUILD=true -p:Version=${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}
          dotnet pack --configuration $config ./src/Common.Utilities.Redis/Common.Utilities.Redis.csproj /p:CI_BUILD=true -p:Version=${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}
          dotnet nuget push ./src/Common.Utilities.Redis/bin/Release/*.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --no-symbols --skip-duplicate
          dotnet nuget push ./src/Common.Utilities.Redis/bin/Release/*.nupkg --api-key ${{secrets.NUGET_ORG_KEY}} --source https://api.nuget.org/v3/index.json --no-symbols --skip-duplicate

      - name: Publish Common.Utilities.Configuration
        run: |
          dotnet build --configuration $config ./src/Common.Utilities.Configuration/Common.Utilities.Configuration.csproj /p:ContinuousIntegrationBuild=true /p:CI_BUILD=true -p:Version=${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}
          dotnet pack --configuration $config ./src/Common.Utilities.Configuration/Common.Utilities.Configuration.csproj /p:CI_BUILD=true -p:Version=${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}
          dotnet nuget push ./src/Common.Utilities.Configuration/bin/Release/*.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --no-symbols --skip-duplicate
          dotnet nuget push ./src/Common.Utilities.Configuration/bin/Release/*.nupkg --api-key ${{secrets.NUGET_ORG_KEY}} --source https://api.nuget.org/v3/index.json --no-symbols --skip-duplicate


      - name: Publish Common.Utilities.Hosting
        run: |
          dotnet build --configuration $config ./src/Common.Utilities.Hosting/Common.Utilities.Hosting.csproj /p:ContinuousIntegrationBuild=true /p:CI_BUILD=true -p:Version=${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}
          dotnet pack --configuration $config ./src/Common.Utilities.Hosting/Common.Utilities.Hosting.csproj /p:CI_BUILD=true -p:Version=${{steps.branch_name.outputs.SOURCE_TAG_TRIMMED}}
          dotnet nuget push ./src/Common.Utilities.Hosting/bin/Release/*.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --no-symbols --skip-duplicate
          dotnet nuget push ./src/Common.Utilities.Hosting/bin/Release/*.nupkg --api-key ${{secrets.NUGET_ORG_KEY}} --source https://api.nuget.org/v3/index.json --no-symbols --skip-duplicate

