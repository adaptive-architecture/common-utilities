name: Build and test.
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: "tests"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          java-package: 'jre'

      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # In order for Sonar Scan to have all data.

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install dependencies
        run: |
          dotnet restore

      - name: Install tools
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: SonarQube Begin
        run: >-
          dotnet sonarscanner begin /k:"adaptive-architecture_common-utilities"
          /o:"adaptive-architecture"
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.cs.opencover.reportsPaths=./coverage/coverage.opencover.xml
          /d:sonar.scanner.scanAll=false
          /d:sonar.exclusions="**/assets/**/*,**/coverage/**/*,**/docfx/**/*,**/samples/**/*,**/bin/**/*,**/obj/**/*"
          /d:sonar.scanner.skipJreProvisioning=true

      - name: Build
        run: dotnet build --no-incremental

      - name: Run Unit Tests
        run: sh ./pipeline/unit-test.sh

      - name: SonarQube End
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - uses: coverallsapp/github-action@master
      #   with:
      #     github-token: "${{ secrets.GITHUB_TOKEN }}"
      #     path-to-lcov: "./coverage/coverage.info"
