{
  "api/AdaptArch.Common.Utilities.Configuration.Contracts.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Contracts.html",
    "title": "Namespace AdaptArch.Common.Utilities.Configuration.Contracts | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Configuration.Contracts Interfaces IConfigurationParser Configuration parser. IDataProvider A data configuration data provider."
  },
  "api/AdaptArch.Common.Utilities.Configuration.Contracts.IConfigurationParser.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Contracts.IConfigurationParser.html",
    "title": "Interface IConfigurationParser | Adaptive Architecture Common Utilities",
    "keywords": "Interface IConfigurationParser Configuration parser. Namespace : AdaptArch.Common.Utilities.Configuration.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IConfigurationParser Methods Parse(String) Parse a containing configuration data. Declaration IReadOnlyDictionary<string, string> Parse(string input) Parameters Type Name Description System.String input The configuration data stream. Returns Type Description IReadOnlyDictionary < System.String , System.String >"
  },
  "api/AdaptArch.Common.Utilities.Configuration.Contracts.IDataProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Contracts.IDataProvider.html",
    "title": "Interface IDataProvider | Adaptive Architecture Common Utilities",
    "keywords": "Interface IDataProvider A data configuration data provider. Namespace : AdaptArch.Common.Utilities.Configuration.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IDataProvider Methods GetHashAsync(CancellationToken) Read the hash for the current state of the configuration data. If the hash code is the same as the previous version the call to ReadDataAsync(CancellationToken) should not be done. Declaration Task<string> GetHashAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token. Returns Type Description Task < System.String > ReadDataAsync(CancellationToken) Read the raw configuration data. Declaration Task<IReadOnlyDictionary<string, string>> ReadDataAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken A cancellation token. Returns Type Description Task < IReadOnlyDictionary < System.String , System.String >>"
  },
  "api/AdaptArch.Common.Utilities.Configuration.Implementation.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Implementation.html",
    "title": "Namespace AdaptArch.Common.Utilities.Configuration.Implementation | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Configuration.Implementation Classes JsonConfigurationParser An IConfigurationParser implementation that handles JSON data. Based on https://github.com/dotnet/runtime/blob/main/src/libraries/Microsoft.Extensions.Configuration.Json/src/JsonConfigurationFileParser.cs ."
  },
  "api/AdaptArch.Common.Utilities.Configuration.Implementation.JsonConfigurationParser.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Implementation.JsonConfigurationParser.html",
    "title": "Class JsonConfigurationParser | Adaptive Architecture Common Utilities",
    "keywords": "Class JsonConfigurationParser An IConfigurationParser implementation that handles JSON data. Based on https://github.com/dotnet/runtime/blob/main/src/libraries/Microsoft.Extensions.Configuration.Json/src/JsonConfigurationFileParser.cs . Inheritance System.Object JsonConfigurationParser Implements IConfigurationParser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Configuration.Implementation Assembly : AdaptArch.Common.Utilities.dll Syntax public class JsonConfigurationParser : IConfigurationParser Constructors JsonConfigurationParser(String) Constructor. Declaration public JsonConfigurationParser(string keyDelimiter) Parameters Type Name Description System.String keyDelimiter The key delimiter. Methods Parse(String) Declaration public IReadOnlyDictionary<string, string> Parse(string input) Parameters Type Name Description System.String input Returns Type Description IReadOnlyDictionary < System.String , System.String > Implements IConfigurationParser"
  },
  "api/AdaptArch.Common.Utilities.Configuration.Providers.CustomConfigurationProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Providers.CustomConfigurationProvider.html",
    "title": "Class CustomConfigurationProvider | Adaptive Architecture Common Utilities",
    "keywords": "Class CustomConfigurationProvider Inheritance System.Object Microsoft.Extensions.Configuration.ConfigurationProvider CustomConfigurationProvider Implements Microsoft.Extensions.Configuration.IConfigurationProvider Inherited Members Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String, System.String) Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String, System.String) Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable<System.String>, System.String) Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken() Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload() Microsoft.Extensions.Configuration.ConfigurationProvider.ToString() Microsoft.Extensions.Configuration.ConfigurationProvider.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : AdaptArch.Common.Utilities.Configuration.Providers Assembly : AdaptArch.Common.Utilities.Configuration.dll Syntax public class CustomConfigurationProvider : ConfigurationProvider, IConfigurationProvider Constructors CustomConfigurationProvider(IDataProvider, CustomConfigurationProviderOptions) Constructor. Declaration public CustomConfigurationProvider(IDataProvider dataProvider, CustomConfigurationProviderOptions options) Parameters Type Name Description IDataProvider dataProvider The raw data provider. CustomConfigurationProviderOptions options The configuration provider options. Methods Load() Declaration public override void Load() Overrides Microsoft.Extensions.Configuration.ConfigurationProvider.Load() Implements Microsoft.Extensions.Configuration.IConfigurationProvider"
  },
  "api/AdaptArch.Common.Utilities.Configuration.Providers.CustomConfigurationProviderOptions.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Providers.CustomConfigurationProviderOptions.html",
    "title": "Class CustomConfigurationProviderOptions | Adaptive Architecture Common Utilities",
    "keywords": "Class CustomConfigurationProviderOptions Options for the CustomConfigurationProvider . Inheritance System.Object CustomConfigurationProviderOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Configuration.Providers Assembly : AdaptArch.Common.Utilities.Configuration.dll Syntax public class CustomConfigurationProviderOptions Properties ConfigurationParser A ConfigurationParser to parse the individual values. Declaration public IConfigurationParser? ConfigurationParser { get; set; } Property Value Type Description System.Nullable < IConfigurationParser > HandleLoadException Exception handler in case the provider is unable to retrieve the configuration. Declaration public Func<LoadExceptionContext, LoadExceptionHandlerResult>? HandleLoadException { get; set; } Property Value Type Description System.Nullable < Func < LoadExceptionContext , LoadExceptionHandlerResult >> OriginalKeyDelimiter A delimiter from the configuration keys that should be replaced by Microsoft.Extensions.Configuration.ConfigurationPath.KeyDelimiter . Declaration public string OriginalKeyDelimiter { get; set; } Property Value Type Description System.String PoolingInterval The interval at which the data provider should reload the configuration. Default value System.TimeSpan.Zero . This should be a value grater than System.TimeSpan.Zero . Declaration public TimeSpan PoolingInterval { get; set; } Property Value Type Description TimeSpan Prefix The prefix to used for all the configuration keys. Declaration public string Prefix { get; set; } Property Value Type Description System.String"
  },
  "api/AdaptArch.Common.Utilities.Configuration.Providers.CustomConfigurationSource.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Providers.CustomConfigurationSource.html",
    "title": "Class CustomConfigurationSource | Adaptive Architecture Common Utilities",
    "keywords": "Class CustomConfigurationSource A custom implementation for Microsoft.Extensions.Configuration.IConfigurationSource . Inheritance System.Object CustomConfigurationSource Implements Microsoft.Extensions.Configuration.IConfigurationSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Configuration.Providers Assembly : AdaptArch.Common.Utilities.Configuration.dll Syntax public class CustomConfigurationSource : IConfigurationSource Properties DataProvider The configuration data provider. Declaration public IDataProvider? DataProvider { get; set; } Property Value Type Description System.Nullable < IDataProvider > Options The configuration provider options; Declaration public CustomConfigurationProviderOptions Options { get; set; } Property Value Type Description CustomConfigurationProviderOptions Methods Build(IConfigurationBuilder) Declaration public IConfigurationProvider Build(IConfigurationBuilder builder) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationBuilder builder Returns Type Description Microsoft.Extensions.Configuration.IConfigurationProvider Implements Microsoft.Extensions.Configuration.IConfigurationSource"
  },
  "api/AdaptArch.Common.Utilities.Configuration.Providers.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Providers.html",
    "title": "Namespace AdaptArch.Common.Utilities.Configuration.Providers | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Configuration.Providers Classes CustomConfigurationProvider CustomConfigurationProviderOptions Options for the CustomConfigurationProvider . CustomConfigurationSource A custom implementation for Microsoft.Extensions.Configuration.IConfigurationSource . LoadExceptionContext Load configuration exception context data. LoadExceptionHandlerResult The result of the loading exception handlers."
  },
  "api/AdaptArch.Common.Utilities.Configuration.Providers.LoadExceptionContext.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Providers.LoadExceptionContext.html",
    "title": "Class LoadExceptionContext | Adaptive Architecture Common Utilities",
    "keywords": "Class LoadExceptionContext Load configuration exception context data. Inheritance System.Object LoadExceptionContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Configuration.Providers Assembly : AdaptArch.Common.Utilities.Configuration.dll Syntax public class LoadExceptionContext Constructors LoadExceptionContext(Exception) Constructor. Declaration public LoadExceptionContext(Exception exception) Parameters Type Name Description Exception exception The exception that occurred. Properties Exception The exception that occurred. Declaration public Exception Exception { get; set; } Property Value Type Description Exception Reload Determines if the context of the exception was a call to reload. Declaration public bool Reload { get; set; } Property Value Type Description System.Boolean"
  },
  "api/AdaptArch.Common.Utilities.Configuration.Providers.LoadExceptionHandlerResult.html": {
    "href": "api/AdaptArch.Common.Utilities.Configuration.Providers.LoadExceptionHandlerResult.html",
    "title": "Class LoadExceptionHandlerResult | Adaptive Architecture Common Utilities",
    "keywords": "Class LoadExceptionHandlerResult The result of the loading exception handlers. Inheritance System.Object LoadExceptionHandlerResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Configuration.Providers Assembly : AdaptArch.Common.Utilities.Configuration.dll Syntax public class LoadExceptionHandlerResult Properties DisablePooling Determines if the CustomConfigurationProvider should stop pooling for changes. Declaration public bool DisablePooling { get; set; } Property Value Type Description System.Boolean IgnoreException Determines if the exception should be ignored. Declaration public bool IgnoreException { get; set; } Property Value Type Description System.Boolean"
  },
  "api/AdaptArch.Common.Utilities.Delay.Contracts.DelayType.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Contracts.DelayType.html",
    "title": "Enum DelayType | Adaptive Architecture Common Utilities",
    "keywords": "Enum DelayType The type of delay. Namespace : AdaptArch.Common.Utilities.Delay.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public enum DelayType Fields Name Description Constant The delays will have the same value. Linear The delays will increase/decrease linearly. PowerOf2 The delays will increase/decrease following a power of 2 pattern. PowerOfE The delays will increase/decrease following a power of e(2.71..) pattern. Unknown Unknown type."
  },
  "api/AdaptArch.Common.Utilities.Delay.Contracts.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Contracts.html",
    "title": "Namespace AdaptArch.Common.Utilities.Delay.Contracts | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Delay.Contracts Interfaces IDelayGenerator A utility to generate delays. IJitterGenerator An utility to generate a jitter value. Enums DelayType The type of delay."
  },
  "api/AdaptArch.Common.Utilities.Delay.Contracts.IDelayGenerator.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Contracts.IDelayGenerator.html",
    "title": "Interface IDelayGenerator | Adaptive Architecture Common Utilities",
    "keywords": "Interface IDelayGenerator A utility to generate delays. Namespace : AdaptArch.Common.Utilities.Delay.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IDelayGenerator Methods GetDelays() Generate the delay durations. Declaration IEnumerable<TimeSpan> GetDelays() Returns Type Description IEnumerable < TimeSpan >"
  },
  "api/AdaptArch.Common.Utilities.Delay.Contracts.IJitterGenerator.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Contracts.IJitterGenerator.html",
    "title": "Interface IJitterGenerator | Adaptive Architecture Common Utilities",
    "keywords": "Interface IJitterGenerator An utility to generate a jitter value. Namespace : AdaptArch.Common.Utilities.Delay.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IJitterGenerator Methods New(TimeSpan, Single, Single) Generate a jitter that has a value which is a percentage of the base value. The percentage (in absolute) is between the lower and the upper boundary. This will return a positive or negative value. Declaration TimeSpan New(TimeSpan baseValue, float lowerBoundary, float upperBoundary) Parameters Type Name Description TimeSpan baseValue The base value. System.Single lowerBoundary The minimum value of the percentage. This must be a positive value between 0 and 1. System.Single upperBoundary The maximum value of the percentage. This must be a positive value between 0 and 1. Returns Type Description TimeSpan"
  },
  "api/AdaptArch.Common.Utilities.Delay.Implementations.DelayGenerator.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Implementations.DelayGenerator.html",
    "title": "Class DelayGenerator | Adaptive Architecture Common Utilities",
    "keywords": "Class DelayGenerator Inheritance System.Object DelayGenerator Implements IDelayGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Delay.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class DelayGenerator : IDelayGenerator Constructors DelayGenerator(DelayGeneratorOptions) Constructor. Declaration public DelayGenerator(DelayGeneratorOptions options) Parameters Type Name Description DelayGeneratorOptions options Configuration options. Methods GetDelays() Declaration public IEnumerable<TimeSpan> GetDelays() Returns Type Description IEnumerable < TimeSpan > Implements IDelayGenerator"
  },
  "api/AdaptArch.Common.Utilities.Delay.Implementations.DelayGeneratorOptions.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Implementations.DelayGeneratorOptions.html",
    "title": "Class DelayGeneratorOptions | Adaptive Architecture Common Utilities",
    "keywords": "Class DelayGeneratorOptions Configuration options for DelayGenerator . Inheritance System.Object DelayGeneratorOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Delay.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class DelayGeneratorOptions Properties Current The current start delay. The default value is: 0. Which will return a delay close to depending on the jitter. Declaration public int Current { get; set; } Property Value Type Description System.Int32 DelayInterval The base interval to delay upon. Declaration public TimeSpan DelayInterval { get; set; } Property Value Type Description TimeSpan DelayType The type of delay. Declaration public DelayType DelayType { get; set; } Property Value Type Description DelayType JitterGenerator The jitter generator. Declaration public IJitterGenerator JitterGenerator { get; set; } Property Value Type Description IJitterGenerator JitterLowerBoundary The value used to the \"lowerBoundary\" parameter of the New(TimeSpan, Single, Single) method. Declaration public float JitterLowerBoundary { get; set; } Property Value Type Description System.Single JitterUpperBoundary The value used to the \"upperBoundary\" parameter of the New(TimeSpan, Single, Single) method. Declaration public float JitterUpperBoundary { get; set; } Property Value Type Description System.Single MaxIterations The maximum number of iterations to generate delays. The default value is: 5. Declaration public int MaxIterations { get; set; } Property Value Type Description System.Int32"
  },
  "api/AdaptArch.Common.Utilities.Delay.Implementations.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Implementations.html",
    "title": "Namespace AdaptArch.Common.Utilities.Delay.Implementations | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Delay.Implementations Classes DelayGenerator DelayGeneratorOptions Configuration options for DelayGenerator . JitterGenerator Simple jitter generator. ZeroJitterGenerator An implementation of IJitterGenerator that return all the time."
  },
  "api/AdaptArch.Common.Utilities.Delay.Implementations.JitterGenerator.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Implementations.JitterGenerator.html",
    "title": "Class JitterGenerator | Adaptive Architecture Common Utilities",
    "keywords": "Class JitterGenerator Simple jitter generator. Inheritance System.Object JitterGenerator Implements IJitterGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Delay.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class JitterGenerator : IJitterGenerator Constructors JitterGenerator(IRandomGenerator) Constructor. Declaration public JitterGenerator(IRandomGenerator randomGenerator) Parameters Type Name Description IRandomGenerator randomGenerator A random generator. Methods New(TimeSpan, Single, Single) Declaration public TimeSpan New(TimeSpan baseValue, float lowerBoundary, float upperBoundary) Parameters Type Name Description TimeSpan baseValue System.Single lowerBoundary System.Single upperBoundary Returns Type Description TimeSpan Implements IJitterGenerator"
  },
  "api/AdaptArch.Common.Utilities.Delay.Implementations.ZeroJitterGenerator.html": {
    "href": "api/AdaptArch.Common.Utilities.Delay.Implementations.ZeroJitterGenerator.html",
    "title": "Class ZeroJitterGenerator | Adaptive Architecture Common Utilities",
    "keywords": "Class ZeroJitterGenerator An implementation of IJitterGenerator that return all the time. Inheritance System.Object ZeroJitterGenerator Implements IJitterGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Delay.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class ZeroJitterGenerator : IJitterGenerator Fields Instance A singleton instance of ZeroJitterGenerator . Declaration public static readonly IJitterGenerator Instance Field Value Type Description IJitterGenerator Methods New(TimeSpan, Single, Single) Declaration public TimeSpan New(TimeSpan baseValue, float lowerBoundary, float upperBoundary) Parameters Type Name Description TimeSpan baseValue System.Single lowerBoundary System.Single upperBoundary Returns Type Description TimeSpan Implements IJitterGenerator"
  },
  "api/AdaptArch.Common.Utilities.Encoding.Base64Url.html": {
    "href": "api/AdaptArch.Common.Utilities.Encoding.Base64Url.html",
    "title": "Class Base64Url | Adaptive Architecture Common Utilities",
    "keywords": "Class Base64Url Contains utility APIs to assist with encoding and decoding operations using URL and Filename Safe Alphabet . Inheritance System.Object Base64Url Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Encoding Assembly : AdaptArch.Common.Utilities.dll Syntax public static class Base64Url Remarks Inspired by AspNetCore.WebEncoders . Methods Decode(String) Decodes a base64url-encoded string. Declaration public static byte[] Decode(string input) Parameters Type Name Description System.String input The base64url-encoded input to decode. Returns Type Description System.Byte [] The base64url-decoded form of the input. Remarks The input must not contain any whitespace or padding characters. Throws if the input is malformed. Decode(String, Int32, Char[], Int32, Int32) Decodes a base64url-encoded input into a byte[] . Declaration public static byte[] Decode(string input, int offset, char[] buffer, int bufferOffset, int count) Parameters Type Name Description System.String input A string containing the base64url-encoded input to decode. System.Int32 offset The position in input at which decoding should begin. System.Char [] buffer Scratch buffer to hold the s to decode. Array must be large enough to hold bufferOffset and count characters as well as Base64 padding characters. Content is not preserved. System.Int32 bufferOffset The offset into buffer at which to begin writing the s to decode. System.Int32 count The number of characters in input to decode. Returns Type Description System.Byte [] The base64url-decoded form of the input . Remarks The input must not contain any whitespace or padding characters. Throws if the input is malformed. Decode(String, Int32, Int32) Decodes a base64url-encoded substring of a given string. Declaration public static byte[] Decode(string input, int offset, int count) Parameters Type Name Description System.String input A string containing the base64url-encoded input to decode. System.Int32 offset The position in input at which decoding should begin. System.Int32 count The number of characters in input to decode. Returns Type Description System.Byte [] The base64url-decoded form of the input. Remarks The input must not contain any whitespace or padding characters. Throws if the input is malformed. Encode(ReadOnlySpan<Byte>) Encodes input using base64url encoding. Declaration public static string Encode(ReadOnlySpan<byte> input) Parameters Type Name Description ReadOnlySpan < System.Byte > input The binary input to encode. Returns Type Description System.String The base64url-encoded form of input . Encode(Byte[]) Encodes input using base64url encoding. Declaration public static string Encode(byte[] input) Parameters Type Name Description System.Byte [] input The binary input to encode. Returns Type Description System.String The base64url-encoded form of input . Encode(Byte[], Int32, Char[], Int32, Int32) Encodes input using base64url encoding. Declaration public static int Encode(byte[] input, int offset, char[] output, int outputOffset, int count) Parameters Type Name Description System.Byte [] input The binary input to encode. System.Int32 offset The offset into input at which to begin encoding. System.Char [] output Buffer to receive the base64url-encoded form of input . Array must be large enough to hold outputOffset characters and the full base64-encoded form of input , including padding characters. System.Int32 outputOffset The offset into output at which to begin writing the base64url-encoded form of input . System.Int32 count The number of byte s from input to encode. Returns Type Description System.Int32 The number of characters written to output , less any padding characters. Encode(Byte[], Int32, Int32) Encodes input using base64url encoding. Declaration public static string Encode(byte[] input, int offset, int count) Parameters Type Name Description System.Byte [] input The binary input to encode. System.Int32 offset The offset into input at which to begin encoding. System.Int32 count The number of bytes from input to encode. Returns Type Description System.String The base64url-encoded form of input . GetArraySizeRequiredToDecode(Int32) Gets the minimum char[] size required for decoding of count characters with the method. Declaration public static int GetArraySizeRequiredToDecode(int count) Parameters Type Name Description System.Int32 count The number of characters to decode. Returns Type Description System.Int32 The minimum char[] size required for decoding of count characters. GetArraySizeRequiredToEncode(Int32) Get the minimum output char[] size required for encoding count s with the method. Declaration public static int GetArraySizeRequiredToEncode(int count) Parameters Type Name Description System.Int32 count The number of characters to encode. Returns Type Description System.Int32 The minimum output char[] size required for encoding count s."
  },
  "api/AdaptArch.Common.Utilities.Encoding.Base64UrlEncoder.html": {
    "href": "api/AdaptArch.Common.Utilities.Encoding.Base64UrlEncoder.html",
    "title": "Class Base64UrlEncoder | Adaptive Architecture Common Utilities",
    "keywords": "Class Base64UrlEncoder An wrapper arouynd the Base64Url API implementing the IEncoder contract. Inheritance System.Object Base64UrlEncoder Implements IEncoder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Encoding Assembly : AdaptArch.Common.Utilities.dll Syntax public class Base64UrlEncoder : IEncoder Methods Decode(String) Declaration public byte[] Decode(string input) Parameters Type Name Description System.String input Returns Type Description System.Byte [] Encode(Byte[]) Declaration public string Encode(byte[] input) Parameters Type Name Description System.Byte [] input Returns Type Description System.String Implements IEncoder"
  },
  "api/AdaptArch.Common.Utilities.Encoding.html": {
    "href": "api/AdaptArch.Common.Utilities.Encoding.html",
    "title": "Namespace AdaptArch.Common.Utilities.Encoding | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Encoding Classes Base64Url Contains utility APIs to assist with encoding and decoding operations using URL and Filename Safe Alphabet . Base64UrlEncoder An wrapper arouynd the Base64Url API implementing the IEncoder contract. Interfaces IEncoder API Contract to encode and decode infromation."
  },
  "api/AdaptArch.Common.Utilities.Encoding.IEncoder.html": {
    "href": "api/AdaptArch.Common.Utilities.Encoding.IEncoder.html",
    "title": "Interface IEncoder | Adaptive Architecture Common Utilities",
    "keywords": "Interface IEncoder API Contract to encode and decode infromation. Namespace : AdaptArch.Common.Utilities.Encoding Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IEncoder Methods Decode(String) Decode the infromation encoded in the input. Declaration byte[] Decode(string input) Parameters Type Name Description System.String input The encoded input to decode. Returns Type Description System.Byte [] The decoded information. Encode(Byte[]) Encode the infromation recieved in the input. Declaration string Encode(byte[] input) Parameters Type Name Description System.Byte [] input The infromation to encode. Returns Type Description System.String The encoded information."
  },
  "api/AdaptArch.Common.Utilities.Extensions.DateTimeExtensions.html": {
    "href": "api/AdaptArch.Common.Utilities.Extensions.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions | Adaptive Architecture Common Utilities",
    "keywords": "Class DateTimeExtensions Extension methods for . Inheritance System.Object DateTimeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Extensions Assembly : AdaptArch.Common.Utilities.dll Syntax public static class DateTimeExtensions Methods AsUnixTimeMilliseconds(Double) Convert a unix time in milliseconds to a structure. Declaration public static DateTime AsUnixTimeMilliseconds(this double unixTime) Parameters Type Name Description System.Double unixTime The value to convert Returns Type Description DateTime AsUnixTimeMilliseconds(Int64) Convert a unix time in milliseconds to a structure. Declaration public static DateTime AsUnixTimeMilliseconds(this long unixTime) Parameters Type Name Description System.Int64 unixTime The value to convert Returns Type Description DateTime AsUnixTimeMilliseconds(UInt64) Convert a unix time in milliseconds to a structure. Declaration public static DateTime AsUnixTimeMilliseconds(this ulong unixTime) Parameters Type Name Description System.UInt64 unixTime The value to convert Returns Type Description DateTime AsUnixTimeSeconds(Double) Convert a unix time in seconds to a structure. Declaration public static DateTime AsUnixTimeSeconds(this double unixTime) Parameters Type Name Description System.Double unixTime The value to convert Returns Type Description DateTime AsUnixTimeSeconds(Int64) Convert a unix time in seconds to a structure. Declaration public static DateTime AsUnixTimeSeconds(this long unixTime) Parameters Type Name Description System.Int64 unixTime The value to convert Returns Type Description DateTime AsUnixTimeSeconds(UInt64) Convert a unix time in seconds to a structure. Declaration public static DateTime AsUnixTimeSeconds(this ulong unixTime) Parameters Type Name Description System.UInt64 unixTime The value to convert Returns Type Description DateTime ToUnixTimeMilliseconds(DateTime) Convert a structure in milliseconds. Declaration public static double ToUnixTimeMilliseconds(this DateTime unixTime) Parameters Type Name Description DateTime unixTime The value to convert Returns Type Description System.Double ToUnixTimeSeconds(DateTime) Convert a structure in seconds. Declaration public static double ToUnixTimeSeconds(this DateTime unixTime) Parameters Type Name Description DateTime unixTime The value to convert Returns Type Description System.Double"
  },
  "api/AdaptArch.Common.Utilities.Extensions.DictionaryExtensions.html": {
    "href": "api/AdaptArch.Common.Utilities.Extensions.DictionaryExtensions.html",
    "title": "Class DictionaryExtensions | Adaptive Architecture Common Utilities",
    "keywords": "Class DictionaryExtensions Extension methods for . Inheritance System.Object DictionaryExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Extensions Assembly : AdaptArch.Common.Utilities.dll Syntax public static class DictionaryExtensions Methods GetValueOrDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>, Boolean) Try to get the value specified by a key from a dictionary. Declaration public static TValue GetValueOrDefault<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, Func<TKey, TValue> defaultValue, bool setDefault) Parameters Type Name Description IDictionary <TKey, TValue> dictionary The dictionary. TKey key The key. Func <TKey, TValue> defaultValue The factory method for the default value to return. System.Boolean setDefault Add the default value to the original dictionary for the given key. Returns Type Description TValue The returned value is the value found in the dictionary if this is not null or the default value if it is not present in the dictionary or it's null. Type Parameters Name Description TKey The key type. TValue The value type. GetValueOrDefault<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, TKey, Func<TKey, TValue>) Try to get the value specified by a key from a dictionary. Declaration public static TValue GetValueOrDefault<TKey, TValue>(this IReadOnlyDictionary<TKey, TValue> dictionary, TKey key, Func<TKey, TValue> defaultValue) Parameters Type Name Description IReadOnlyDictionary <TKey, TValue> dictionary The dictionary. TKey key The key. Func <TKey, TValue> defaultValue The factory method for the default value to return. Returns Type Description TValue The returned value is the value found in the dictionary if this is not null or the default value if it is not present in the dictionary or it's null. Type Parameters Name Description TKey The key type. TValue The value type. TryGetValueOrDefault<TKey, TValue>(IDictionary<TKey, TValue>, TKey, Func<TKey, TValue>, Boolean, out TValue) Try to get the value specified by a key from a dictionary. Declaration public static bool TryGetValueOrDefault<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key, Func<TKey, TValue> defaultValue, bool setDefault, out TValue value) Parameters Type Name Description IDictionary <TKey, TValue> dictionary The dictionary. TKey key The key. Func <TKey, TValue> defaultValue The factory method for the default value to return. System.Boolean setDefault Add the default value to the original dictionary for the given key. TValue value The returned value. Returns Type Description System.Boolean True if the value found in the dictionary is not null or false if it is not present in the dictionary or it's null. Type Parameters Name Description TKey The key type. TValue The value type. Remarks The returned value is the value found in the dictionary if this is not null or the default value if it is not present in the dictionary or it's null. TryGetValueOrDefault<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, TKey, Func<TKey, TValue>, out TValue) Try to get the value specified by a key from a dictionary. Declaration public static bool TryGetValueOrDefault<TKey, TValue>(this IReadOnlyDictionary<TKey, TValue> dictionary, TKey key, Func<TKey, TValue> defaultValue, out TValue value) Parameters Type Name Description IReadOnlyDictionary <TKey, TValue> dictionary The dictionary. TKey key The key. Func <TKey, TValue> defaultValue The factory method for the default value to return. TValue value The returned value. Returns Type Description System.Boolean True if the value found in the dictionary is not null or false if it is not present in the dictionary or it's null. Type Parameters Name Description TKey The key type. TValue The value type. Remarks The returned value is the value found in the dictionary if this is not null or the default value if it is not present in the dictionary or it's null."
  },
  "api/AdaptArch.Common.Utilities.Extensions.html": {
    "href": "api/AdaptArch.Common.Utilities.Extensions.html",
    "title": "Namespace AdaptArch.Common.Utilities.Extensions | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Extensions Classes DateTimeExtensions Extension methods for . DictionaryExtensions Extension methods for . TaskExtensions Extension methods for ."
  },
  "api/AdaptArch.Common.Utilities.Extensions.TaskExtensions.html": {
    "href": "api/AdaptArch.Common.Utilities.Extensions.TaskExtensions.html",
    "title": "Class TaskExtensions | Adaptive Architecture Common Utilities",
    "keywords": "Class TaskExtensions Extension methods for . Inheritance System.Object TaskExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Extensions Assembly : AdaptArch.Common.Utilities.dll Syntax public static class TaskExtensions Methods Forget(Task) Observes the task to avoid the UnobservedTaskException event to be raised. Declaration public static void Forget(this Task task) Parameters Type Name Description Task task"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Contracts.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Contracts.html",
    "title": "Namespace AdaptArch.Common.Utilities.GlobalAbstractions.Contracts | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.GlobalAbstractions.Contracts Interfaces IDateTimeProvider Abstraction for date time provider. IRandomGenerator An abstraction for a random generator. IUuidProvider Abstraction for UUID provider."
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Contracts.IDateTimeProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Contracts.IDateTimeProvider.html",
    "title": "Interface IDateTimeProvider | Adaptive Architecture Common Utilities",
    "keywords": "Interface IDateTimeProvider Abstraction for date time provider. Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IDateTimeProvider Properties UtcNow Gets a System.DateTime object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC). Declaration DateTime UtcNow { get; } Property Value Type Description DateTime An object whose value is the current UTC date and time."
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Contracts.IRandomGenerator.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Contracts.IRandomGenerator.html",
    "title": "Interface IRandomGenerator | Adaptive Architecture Common Utilities",
    "keywords": "Interface IRandomGenerator An abstraction for a random generator. Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IRandomGenerator Methods Next(Int32, Int32) Generate a random value between the minimum and the maximum. Declaration int Next(int minValue, int maxValue) Parameters Type Name Description System.Int32 minValue The minimum value. System.Int32 maxValue The maximum value. Returns Type Description System.Int32"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Contracts.IUuidProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Contracts.IUuidProvider.html",
    "title": "Interface IUuidProvider | Adaptive Architecture Common Utilities",
    "keywords": "Interface IUuidProvider Abstraction for UUID provider. Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IUuidProvider Methods New() Generate a new UUID. Declaration string New() Returns Type Description System.String"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.DashedUuidProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.DashedUuidProvider.html",
    "title": "Class DashedUuidProvider | Adaptive Architecture Common Utilities",
    "keywords": "Class DashedUuidProvider An implementation of IUuidProvider based on that uses the \"D\" pattern when serializing to string. Inheritance System.Object DashedUuidProvider Implements IUuidProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class DashedUuidProvider : IUuidProvider Methods New() Declaration public string New() Returns Type Description System.String Implements IUuidProvider"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.DateTimeProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.DateTimeProvider.html",
    "title": "Class DateTimeProvider | Adaptive Architecture Common Utilities",
    "keywords": "Class DateTimeProvider An implementation of IDateTimeProvider based on . Inheritance System.Object DateTimeProvider Implements IDateTimeProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class DateTimeProvider : IDateTimeProvider Properties UtcNow Declaration public DateTime UtcNow { get; } Property Value Type Description DateTime Implements IDateTimeProvider"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.html",
    "title": "Namespace AdaptArch.Common.Utilities.GlobalAbstractions.Implementations | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.GlobalAbstractions.Implementations Classes DashedUuidProvider An implementation of IUuidProvider based on that uses the \"D\" pattern when serializing to string. DateTimeProvider An implementation of IDateTimeProvider based on . RandomGenerator An implementation of IRandomGenerator based on . This should not be used for cryptographically secure implementations. UnDashedUuidProvider An implementation of IUuidProvider based on that uses the \"N\" pattern when serializing to string."
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks.DateTimeMockProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks.DateTimeMockProvider.html",
    "title": "Class DateTimeMockProvider | Adaptive Architecture Common Utilities",
    "keywords": "Class DateTimeMockProvider An mock implementation of IDateTimeProvider . Inheritance System.Object MockProvider < DateTime > DateTimeMockProvider Implements IDateTimeProvider Inherited Members MockProvider<DateTime>.GetNextValue() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks Assembly : AdaptArch.Common.Utilities.dll Syntax public class DateTimeMockProvider : MockProvider<DateTime>, IDateTimeProvider Constructors DateTimeMockProvider(DateTime[]) Declaration public DateTimeMockProvider(DateTime[] items) Parameters Type Name Description DateTime [] items Properties UtcNow Declaration public DateTime UtcNow { get; } Property Value Type Description DateTime Implements IDateTimeProvider"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks.html",
    "title": "Namespace AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks Classes DateTimeMockProvider An mock implementation of IDateTimeProvider . MockProvider<T> Base class for implementing a mock provider. The implementation will loop through the items it receives as part of the constructor. UuidMockProvider An mock implementation of IUuidProvider based on that uses the \"D\" pattern when serializing to string."
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks.MockProvider-1.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks.MockProvider-1.html",
    "title": "Class MockProvider<T> | Adaptive Architecture Common Utilities",
    "keywords": "Class MockProvider<T> Base class for implementing a mock provider. The implementation will loop through the items it receives as part of the constructor. Inheritance System.Object MockProvider<T> DateTimeMockProvider UuidMockProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks Assembly : AdaptArch.Common.Utilities.dll Syntax public abstract class MockProvider<T> Type Parameters Name Description T Constructors MockProvider(T[]) Constructor. Declaration protected MockProvider(T[] items) Parameters Type Name Description T[] items The items to loop through. Methods GetNextValue() Get the next value from the collection. Declaration protected T GetNextValue() Returns Type Description T"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks.UuidMockProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks.UuidMockProvider.html",
    "title": "Class UuidMockProvider | Adaptive Architecture Common Utilities",
    "keywords": "Class UuidMockProvider An mock implementation of IUuidProvider based on that uses the \"D\" pattern when serializing to string. Inheritance System.Object MockProvider < Guid > UuidMockProvider Implements IUuidProvider Inherited Members MockProvider<Guid>.GetNextValue() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.Mocks Assembly : AdaptArch.Common.Utilities.dll Syntax public class UuidMockProvider : MockProvider<Guid>, IUuidProvider Constructors UuidMockProvider(Guid[]) Declaration public UuidMockProvider(Guid[] items) Parameters Type Name Description Guid [] items Methods New() Declaration public string New() Returns Type Description System.String Implements IUuidProvider"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.RandomGenerator.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.RandomGenerator.html",
    "title": "Class RandomGenerator | Adaptive Architecture Common Utilities",
    "keywords": "Class RandomGenerator An implementation of IRandomGenerator based on . This should not be used for cryptographically secure implementations. Inheritance System.Object RandomGenerator Implements IRandomGenerator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class RandomGenerator : IRandomGenerator Constructors RandomGenerator(Random) Constructor. Declaration public RandomGenerator(Random random) Parameters Type Name Description Random random Random generator. Properties Instance A global instance. Declaration public static IRandomGenerator Instance { get; } Property Value Type Description IRandomGenerator Methods Next(Int32, Int32) Declaration public int Next(int minValue, int maxValue) Parameters Type Name Description System.Int32 minValue System.Int32 maxValue Returns Type Description System.Int32 Implements IRandomGenerator"
  },
  "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.UnDashedUuidProvider.html": {
    "href": "api/AdaptArch.Common.Utilities.GlobalAbstractions.Implementations.UnDashedUuidProvider.html",
    "title": "Class UnDashedUuidProvider | Adaptive Architecture Common Utilities",
    "keywords": "Class UnDashedUuidProvider An implementation of IUuidProvider based on that uses the \"N\" pattern when serializing to string. Inheritance System.Object UnDashedUuidProvider Implements IUuidProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.GlobalAbstractions.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class UnDashedUuidProvider : IUuidProvider Methods New() Declaration public string New() Returns Type Description System.String Implements IUuidProvider"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Contracts.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Contracts.html",
    "title": "Namespace AdaptArch.Common.Utilities.PubSub.Contracts | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.PubSub.Contracts Interfaces IMessage<T> A pub/sub message. IMessageBuilder<T> A message builder. IMessageHub Contract for a Pub/Sub hub. IMessageHubAsync Contract for a Pub/Sub hub. Delegates MessageHandler<TMessage> Async handler for a message."
  },
  "api/AdaptArch.Common.Utilities.PubSub.Contracts.IMessage-1.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Contracts.IMessage-1.html",
    "title": "Interface IMessage<T> | Adaptive Architecture Common Utilities",
    "keywords": "Interface IMessage<T> A pub/sub message. Namespace : AdaptArch.Common.Utilities.PubSub.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IMessage<out T> where T : class Type Parameters Name Description T Properties Data Any business related message data. Declaration T Data { get; } Property Value Type Description T Id Unique id. Declaration string Id { get; } Property Value Type Description System.String Timestamp The moment the message was created. Declaration DateTime Timestamp { get; } Property Value Type Description DateTime Topic Message topic. Declaration string Topic { get; } Property Value Type Description System.String"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Contracts.IMessageBuilder-1.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Contracts.IMessageBuilder-1.html",
    "title": "Interface IMessageBuilder<T> | Adaptive Architecture Common Utilities",
    "keywords": "Interface IMessageBuilder<T> A message builder. Namespace : AdaptArch.Common.Utilities.PubSub.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IMessageBuilder<T> where T : class Type Parameters Name Description T Methods Build(String, T) Build a message containing the data. The message topic. The message data. Declaration IMessage<T> Build(string topic, T data) Parameters Type Name Description System.String topic T data Returns Type Description IMessage <T>"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Contracts.IMessageHub.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Contracts.IMessageHub.html",
    "title": "Interface IMessageHub | Adaptive Architecture Common Utilities",
    "keywords": "Interface IMessageHub Contract for a Pub/Sub hub. Namespace : AdaptArch.Common.Utilities.PubSub.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IMessageHub Methods Publish<TMessageData>(String, TMessageData) Publish a message. Declaration void Publish<TMessageData>(string topic, TMessageData data) where TMessageData : class Parameters Type Name Description System.String topic The topic to publish to. TMessageData data The data to publish. Type Parameters Name Description TMessageData Subscribe<TMessageData>(String, MessageHandler<TMessageData>) Subscribe a message handler to a topic. Declaration string Subscribe<TMessageData>(string topic, MessageHandler<TMessageData> handler) where TMessageData : class Parameters Type Name Description System.String topic The topic to publish to. MessageHandler <TMessageData> handler The handler for the data. Returns Type Description System.String An id that can be used to unsubscribe. Type Parameters Name Description TMessageData The type of the data. Unsubscribe(String) Unsubscribe a handler from a topic. Declaration void Unsubscribe(string id) Parameters Type Name Description System.String id The subscription id."
  },
  "api/AdaptArch.Common.Utilities.PubSub.Contracts.IMessageHubAsync.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Contracts.IMessageHubAsync.html",
    "title": "Interface IMessageHubAsync | Adaptive Architecture Common Utilities",
    "keywords": "Interface IMessageHubAsync Contract for a Pub/Sub hub. Namespace : AdaptArch.Common.Utilities.PubSub.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public interface IMessageHubAsync Methods PublishAsync<TMessageData>(String, TMessageData, CancellationToken) Publish a message async. Declaration Task PublishAsync<TMessageData>(string topic, TMessageData data, CancellationToken cancellationToken) where TMessageData : class Parameters Type Name Description System.String topic The topic to publish to. TMessageData data The data to publish. CancellationToken cancellationToken Cancellation token. Returns Type Description Task Type Parameters Name Description TMessageData SubscribeAsync<TMessageData>(String, MessageHandler<TMessageData>, CancellationToken) Subscribe a message handler to a topic async. Declaration Task<string> SubscribeAsync<TMessageData>(string topic, MessageHandler<TMessageData> handler, CancellationToken cancellationToken) where TMessageData : class Parameters Type Name Description System.String topic The topic to publish to. MessageHandler <TMessageData> handler The handler for the data. CancellationToken cancellationToken Cancellation token. Returns Type Description Task < System.String > An id that can be used to unsubscribe. Type Parameters Name Description TMessageData The type of the data. UnsubscribeAsync(String, CancellationToken) Unsubscribe a handler from a topic async. Declaration Task UnsubscribeAsync(string id, CancellationToken cancellationToken) Parameters Type Name Description System.String id The subscription id. CancellationToken cancellationToken Cancellation token. Returns Type Description Task"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Contracts.MessageHandler-1.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Contracts.MessageHandler-1.html",
    "title": "Delegate MessageHandler<TMessage> | Adaptive Architecture Common Utilities",
    "keywords": "Delegate MessageHandler<TMessage> Async handler for a message. Namespace : AdaptArch.Common.Utilities.PubSub.Contracts Assembly : AdaptArch.Common.Utilities.dll Syntax public delegate Task MessageHandler<in TMessage>(IMessage<TMessage> message, CancellationToken cancellationToken) where TMessage : class; Parameters Type Name Description IMessage <TMessage> message The message to be handled. CancellationToken cancellationToken The cancellation token. Returns Type Description Task Type Parameters Name Description TMessage"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Implementations.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Implementations.html",
    "title": "Namespace AdaptArch.Common.Utilities.PubSub.Implementations | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.PubSub.Implementations Classes InProcessMessageHub An in-process implementation of IMessageHub and IMessageHubAsync . This is intended mostly for unit testing of rapid prototyping. InProcessMessageHubOptions Configuration options for InProcessMessageHub . MessageBuilder<T> MessageHub<TOptions> A type that when implemented offers the functionality of IMessageHub and IMessageHubAsync . MessageHubOptions Base configuration options for IMessageHub and IMessageHubAsync ."
  },
  "api/AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHub.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHub.html",
    "title": "Class InProcessMessageHub | Adaptive Architecture Common Utilities",
    "keywords": "Class InProcessMessageHub An in-process implementation of IMessageHub and IMessageHubAsync . This is intended mostly for unit testing of rapid prototyping. Inheritance System.Object MessageHub < InProcessMessageHubOptions > InProcessMessageHub Implements IMessageHub IMessageHubAsync Inherited Members MessageHub<InProcessMessageHubOptions>.Options MessageHub<InProcessMessageHubOptions>.WrapHandler<TMessageData>(MessageHandler<TMessageData>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.PubSub.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class InProcessMessageHub : MessageHub<InProcessMessageHubOptions>, IMessageHub, IMessageHubAsync Constructors InProcessMessageHub(InProcessMessageHubOptions) Constructor. Declaration public InProcessMessageHub(InProcessMessageHubOptions options) Parameters Type Name Description InProcessMessageHubOptions options The configuration options. Methods Publish<TMessageData>(String, TMessageData) Declaration public override void Publish<TMessageData>(string topic, TMessageData data) where TMessageData : class Parameters Type Name Description System.String topic TMessageData data Type Parameters Name Description TMessageData Overrides AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub<AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHubOptions>.Publish<TMessageData>(System.String, TMessageData) PublishAsync<TMessageData>(String, TMessageData, CancellationToken) Declaration public override async Task PublishAsync<TMessageData>(string topic, TMessageData data, CancellationToken cancellationToken) where TMessageData : class Parameters Type Name Description System.String topic TMessageData data CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description TMessageData Overrides AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub<AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHubOptions>.PublishAsync<TMessageData>(System.String, TMessageData, CancellationToken) Subscribe<TMessageData>(String, MessageHandler<TMessageData>) Declaration public override string Subscribe<TMessageData>(string topic, MessageHandler<TMessageData> handler) where TMessageData : class Parameters Type Name Description System.String topic MessageHandler <TMessageData> handler Returns Type Description System.String Type Parameters Name Description TMessageData Overrides AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub<AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHubOptions>.Subscribe<TMessageData>(System.String, AdaptArch.Common.Utilities.PubSub.Contracts.MessageHandler<TMessageData>) SubscribeAsync<TMessageData>(String, MessageHandler<TMessageData>, CancellationToken) Declaration public override Task<string> SubscribeAsync<TMessageData>(string topic, MessageHandler<TMessageData> handler, CancellationToken cancellationToken) where TMessageData : class Parameters Type Name Description System.String topic MessageHandler <TMessageData> handler CancellationToken cancellationToken Returns Type Description Task < System.String > Type Parameters Name Description TMessageData Overrides AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub<AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHubOptions>.SubscribeAsync<TMessageData>(System.String, AdaptArch.Common.Utilities.PubSub.Contracts.MessageHandler<TMessageData>, CancellationToken) Unsubscribe(String) Declaration public override void Unsubscribe(string id) Parameters Type Name Description System.String id Overrides AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub<AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHubOptions>.Unsubscribe(System.String) UnsubscribeAsync(String, CancellationToken) Declaration public override Task UnsubscribeAsync(string id, CancellationToken cancellationToken) Parameters Type Name Description System.String id CancellationToken cancellationToken Returns Type Description Task Overrides AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub<AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHubOptions>.UnsubscribeAsync(System.String, CancellationToken) Implements IMessageHub IMessageHubAsync"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHubOptions.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Implementations.InProcessMessageHubOptions.html",
    "title": "Class InProcessMessageHubOptions | Adaptive Architecture Common Utilities",
    "keywords": "Class InProcessMessageHubOptions Configuration options for InProcessMessageHub . Inheritance System.Object MessageHubOptions InProcessMessageHubOptions Inherited Members MessageHubOptions.OnMessageHandlerError MessageHubOptions.GetMessageBuilder<T>() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.PubSub.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class InProcessMessageHubOptions : MessageHubOptions Properties MaxDegreeOfParallelism The hub's maximum degree of parallelism. This controls: How many handlers should be called in parallel as the result of a \"publish\". Declaration public int MaxDegreeOfParallelism { get; set; } Property Value Type Description System.Int32"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Implementations.MessageBuilder-1.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Implementations.MessageBuilder-1.html",
    "title": "Class MessageBuilder<T> | Adaptive Architecture Common Utilities",
    "keywords": "Class MessageBuilder<T> Inheritance System.Object MessageBuilder<T> Implements IMessageBuilder <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.PubSub.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public class MessageBuilder<T> : IMessageBuilder<T> where T : class Type Parameters Name Description T Constructors MessageBuilder(IDateTimeProvider, IUuidProvider) Constructor. Declaration public MessageBuilder(IDateTimeProvider dateTimeProvider, IUuidProvider uuidProvider) Parameters Type Name Description IDateTimeProvider dateTimeProvider A date time provider. IUuidProvider uuidProvider An UUID provider. Methods Build(String, T) Declaration public IMessage<T> Build(string topic, T data) Parameters Type Name Description System.String topic T data Returns Type Description IMessage <T> Implements IMessageBuilder<T>"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub-1.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub-1.html",
    "title": "Class MessageHub<TOptions> | Adaptive Architecture Common Utilities",
    "keywords": "Class MessageHub<TOptions> A type that when implemented offers the functionality of IMessageHub and IMessageHubAsync . Inheritance System.Object MessageHub<TOptions> InProcessMessageHub Implements IMessageHub IMessageHubAsync Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.PubSub.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public abstract class MessageHub<TOptions> : IMessageHub, IMessageHubAsync where TOptions : MessageHubOptions Type Parameters Name Description TOptions Constructors MessageHub(TOptions) Constructor. Declaration protected MessageHub(TOptions options) Parameters Type Name Description TOptions options Message hub options. Fields Options The message hub options. Declaration protected readonly TOptions Options Field Value Type Description TOptions Methods Publish<TMessageData>(String, TMessageData) Declaration public abstract void Publish<TMessageData>(string topic, TMessageData data) where TMessageData : class Parameters Type Name Description System.String topic TMessageData data Type Parameters Name Description TMessageData PublishAsync<TMessageData>(String, TMessageData, CancellationToken) Declaration public abstract Task PublishAsync<TMessageData>(string topic, TMessageData data, CancellationToken cancellationToken) where TMessageData : class Parameters Type Name Description System.String topic TMessageData data CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description TMessageData Subscribe<TMessageData>(String, MessageHandler<TMessageData>) Declaration public abstract string Subscribe<TMessageData>(string topic, MessageHandler<TMessageData> handler) where TMessageData : class Parameters Type Name Description System.String topic MessageHandler <TMessageData> handler Returns Type Description System.String Type Parameters Name Description TMessageData SubscribeAsync<TMessageData>(String, MessageHandler<TMessageData>, CancellationToken) Declaration public abstract Task<string> SubscribeAsync<TMessageData>(string topic, MessageHandler<TMessageData> handler, CancellationToken cancellationToken) where TMessageData : class Parameters Type Name Description System.String topic MessageHandler <TMessageData> handler CancellationToken cancellationToken Returns Type Description Task < System.String > Type Parameters Name Description TMessageData Unsubscribe(String) Declaration public abstract void Unsubscribe(string id) Parameters Type Name Description System.String id UnsubscribeAsync(String, CancellationToken) Declaration public abstract Task UnsubscribeAsync(string id, CancellationToken cancellationToken) Parameters Type Name Description System.String id CancellationToken cancellationToken Returns Type Description Task WrapHandler<TMessageData>(MessageHandler<TMessageData>) Wrap the handler in the AdaptArch.Common.Utilities.PubSub.Implementations.MessageHub`1.SafeInvokeHandler``1(AdaptArch.Common.Utilities.PubSub.Contracts.MessageHandler{``0},AdaptArch.Common.Utilities.PubSub.Contracts.IMessage{``0},`0,CancellationToken) method call. Declaration protected MessageHandler<TMessageData> WrapHandler<TMessageData>(MessageHandler<TMessageData> handler) where TMessageData : class Parameters Type Name Description MessageHandler <TMessageData> handler The original handler for the data. Returns Type Description MessageHandler <TMessageData> The wrapped handler for the data. Type Parameters Name Description TMessageData The type of the data. Implements IMessageHub IMessageHubAsync"
  },
  "api/AdaptArch.Common.Utilities.PubSub.Implementations.MessageHubOptions.html": {
    "href": "api/AdaptArch.Common.Utilities.PubSub.Implementations.MessageHubOptions.html",
    "title": "Class MessageHubOptions | Adaptive Architecture Common Utilities",
    "keywords": "Class MessageHubOptions Base configuration options for IMessageHub and IMessageHubAsync . Inheritance System.Object MessageHubOptions InProcessMessageHubOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.PubSub.Implementations Assembly : AdaptArch.Common.Utilities.dll Syntax public abstract class MessageHubOptions Properties OnMessageHandlerError Action to handle any exception thrown in the hub. Declaration public Action<Exception, IMessage<object>>? OnMessageHandlerError { get; set; } Property Value Type Description System.Nullable < Action < Exception , IMessage < System.Object >>> Methods GetMessageBuilder<T>() Accessor method for the message builder. Declaration public virtual IMessageBuilder<T> GetMessageBuilder<T>() where T : class Returns Type Description IMessageBuilder <T> Type Parameters Name Description T"
  },
  "api/AdaptArch.Common.Utilities.Redis.PubSub.html": {
    "href": "api/AdaptArch.Common.Utilities.Redis.PubSub.html",
    "title": "Namespace AdaptArch.Common.Utilities.Redis.PubSub | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Redis.PubSub Classes RedisMessageHub A Redis based implementation of and . RedisMessageHubOptions Configuration options for RedisMessageHub ."
  },
  "api/AdaptArch.Common.Utilities.Redis.PubSub.RedisMessageHub.html": {
    "href": "api/AdaptArch.Common.Utilities.Redis.PubSub.RedisMessageHub.html",
    "title": "Class RedisMessageHub | Adaptive Architecture Common Utilities",
    "keywords": "Class RedisMessageHub A Redis based implementation of and . Inheritance System.Object RedisMessageHub Namespace : AdaptArch.Common.Utilities.Redis.PubSub Assembly : AdaptArch.Common.Utilities.Redis.dll Syntax public class RedisMessageHub : MessageHub<RedisMessageHubOptions> Constructors RedisMessageHub(IConnectionMultiplexer, RedisMessageHubOptions) Constructor. Declaration public RedisMessageHub(IConnectionMultiplexer connectionMultiplexer, RedisMessageHubOptions options) Parameters Type Name Description StackExchange.Redis.IConnectionMultiplexer connectionMultiplexer An instance of StackExchange.Redis.IConnectionMultiplexer . RedisMessageHubOptions options The hub options. Methods Publish<TMessageData>(String, TMessageData) Declaration public override void Publish<TMessageData>(string topic, TMessageData data) Parameters Type Name Description System.String topic TMessageData data Type Parameters Name Description TMessageData PublishAsync<TMessageData>(String, TMessageData, CancellationToken) Declaration public override async Task PublishAsync<TMessageData>(string topic, TMessageData data, CancellationToken cancellationToken) Parameters Type Name Description System.String topic TMessageData data CancellationToken cancellationToken Returns Type Description Task Type Parameters Name Description TMessageData Subscribe<TMessageData>(String, MessageHandler<TMessageData>) Declaration public override string Subscribe<TMessageData>(string topic, MessageHandler<TMessageData> handler) Parameters Type Name Description System.String topic MessageHandler <TMessageData> handler Returns Type Description System.String Type Parameters Name Description TMessageData SubscribeAsync<TMessageData>(String, MessageHandler<TMessageData>, CancellationToken) Declaration public override async Task<string> SubscribeAsync<TMessageData>(string topic, MessageHandler<TMessageData> handler, CancellationToken cancellationToken) Parameters Type Name Description System.String topic MessageHandler <TMessageData> handler CancellationToken cancellationToken Returns Type Description Task < System.String > Type Parameters Name Description TMessageData Unsubscribe(String) Declaration public override void Unsubscribe(string id) Parameters Type Name Description System.String id UnsubscribeAsync(String, CancellationToken) Declaration public override async Task UnsubscribeAsync(string id, CancellationToken cancellationToken) Parameters Type Name Description System.String id CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/AdaptArch.Common.Utilities.Redis.PubSub.RedisMessageHubOptions.html": {
    "href": "api/AdaptArch.Common.Utilities.Redis.PubSub.RedisMessageHubOptions.html",
    "title": "Class RedisMessageHubOptions | Adaptive Architecture Common Utilities",
    "keywords": "Class RedisMessageHubOptions Configuration options for RedisMessageHub . Inheritance System.Object RedisMessageHubOptions Namespace : AdaptArch.Common.Utilities.Redis.PubSub Assembly : AdaptArch.Common.Utilities.Redis.dll Syntax public class RedisMessageHubOptions : MessageHubOptions Properties DataSerializer The IDataSerializer to read/write the data to Redis. Declaration public IDataSerializer DataSerializer { get; set; } Property Value Type Description IDataSerializer"
  },
  "api/AdaptArch.Common.Utilities.Redis.Serialization.Contracts.html": {
    "href": "api/AdaptArch.Common.Utilities.Redis.Serialization.Contracts.html",
    "title": "Namespace AdaptArch.Common.Utilities.Redis.Serialization.Contracts | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Redis.Serialization.Contracts Interfaces IDataSerializer A data serialize for Redis."
  },
  "api/AdaptArch.Common.Utilities.Redis.Serialization.Contracts.IDataSerializer.html": {
    "href": "api/AdaptArch.Common.Utilities.Redis.Serialization.Contracts.IDataSerializer.html",
    "title": "Interface IDataSerializer | Adaptive Architecture Common Utilities",
    "keywords": "Interface IDataSerializer A data serialize for Redis. Namespace : AdaptArch.Common.Utilities.Redis.Serialization.Contracts Assembly : AdaptArch.Common.Utilities.Redis.dll Syntax public interface IDataSerializer Methods Deserialize<T>(RedisValue) Deserialize data from StackExchange.Redis.RedisValue . Declaration T Deserialize<T>(RedisValue data) Parameters Type Name Description StackExchange.Redis.RedisValue data The data to deserialize. Returns Type Description T Type Parameters Name Description T The type of the data. Serialize<T>(T) Serialize data to StackExchange.Redis.RedisValue . Declaration RedisValue Serialize<T>(T data) Parameters Type Name Description T data The data to serialize. Returns Type Description StackExchange.Redis.RedisValue Type Parameters Name Description T The type of the data."
  },
  "api/AdaptArch.Common.Utilities.Redis.Serialization.Implementations.html": {
    "href": "api/AdaptArch.Common.Utilities.Redis.Serialization.Implementations.html",
    "title": "Namespace AdaptArch.Common.Utilities.Redis.Serialization.Implementations | Adaptive Architecture Common Utilities",
    "keywords": "Namespace AdaptArch.Common.Utilities.Redis.Serialization.Implementations Classes JsonDataSerializer A IDataSerializer that uses System.Text.Json ."
  },
  "api/AdaptArch.Common.Utilities.Redis.Serialization.Implementations.JsonDataSerializer.html": {
    "href": "api/AdaptArch.Common.Utilities.Redis.Serialization.Implementations.JsonDataSerializer.html",
    "title": "Class JsonDataSerializer | Adaptive Architecture Common Utilities",
    "keywords": "Class JsonDataSerializer A IDataSerializer that uses System.Text.Json . Inheritance System.Object JsonDataSerializer Implements IDataSerializer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AdaptArch.Common.Utilities.Redis.Serialization.Implementations Assembly : AdaptArch.Common.Utilities.Redis.dll Syntax public class JsonDataSerializer : IDataSerializer Methods Deserialize<T>(RedisValue) Declaration public T Deserialize<T>(RedisValue data) Parameters Type Name Description StackExchange.Redis.RedisValue data Returns Type Description T Type Parameters Name Description T Serialize<T>(T) Declaration public RedisValue Serialize<T>(T data) Parameters Type Name Description T data Returns Type Description StackExchange.Redis.RedisValue Type Parameters Name Description T Implements IDataSerializer"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Adaptive Architecture Common Utilities",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Microsoft.Extensions.Configuration.CustomConfigurationExtensions.html": {
    "href": "api/Microsoft.Extensions.Configuration.CustomConfigurationExtensions.html",
    "title": "Class CustomConfigurationExtensions | Adaptive Architecture Common Utilities",
    "keywords": "Class CustomConfigurationExtensions Extension methods for Microsoft.Extensions.Configuration.IConfigurationBuilder . Inheritance System.Object CustomConfigurationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.Configuration Assembly : AdaptArch.Common.Utilities.Configuration.dll Syntax public static class CustomConfigurationExtensions Methods AddCustomConfiguration(IConfigurationBuilder, Action<CustomConfigurationSource>) Add a CustomConfigurationProvider provider to the configuration data sources. Declaration public static IConfigurationBuilder AddCustomConfiguration(this IConfigurationBuilder builder, Action<CustomConfigurationSource> configureSource) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfigurationBuilder builder The configuration builder. Action < CustomConfigurationSource > configureSource The configuration options. Returns Type Description Microsoft.Extensions.Configuration.IConfigurationBuilder Remarks To get data from the existing configuration follow the instructions from here: https://docs.microsoft.com/en-us/dotnet/core/extensions/custom-configuration-provider ."
  },
  "api/Microsoft.Extensions.Configuration.html": {
    "href": "api/Microsoft.Extensions.Configuration.html",
    "title": "Namespace Microsoft.Extensions.Configuration | Adaptive Architecture Common Utilities",
    "keywords": "Namespace Microsoft.Extensions.Configuration Classes CustomConfigurationExtensions Extension methods for Microsoft.Extensions.Configuration.IConfigurationBuilder ."
  },
  "articles/custom-configuration-provider.html": {
    "href": "articles/custom-configuration-provider.html",
    "title": "Custom configuration provider | Adaptive Architecture Common Utilities",
    "keywords": "Custom configuration provider Provide a simple way to implement your own configuration provider to without the hassle of knowing the internal workings of Microsoft.Extensions.Configuration.ConfigurationProvider . Defining your configuration provider The following code samples assume you are using a database to store the configuration values in a table called configuration_values similar to: key value modified_date Enabled 1 2022-09-18T15:17:43Z MaxThreads 10 2022-09-18T15:17:43Z Before you register a custom configuration provider you need to implement your own version of AdaptArch.Common.Utilities.Configuration.Contracts.IDataProvider . public class DbConfigurationValuesDataProvider: IDataProvider { private readonly string _connectionString; public DbConfigurationValuesDataProvider(string connectionString) { _connectionString = connectionString; } public async Task<IReadOnlyDictionary<string, string?>> ReadDataAsync(CancellationToken cancellationToken = default) { using (SqlConnection connection = new SqlConnection(_connectionString)) { connection.Open(); var configurationData = new Dictionary<string, string?>(); using (var command = new SqlCommand(\"SELECT key, value FROM configuration_values\", connection)) { using (var reader = await command.ExecuteReaderAsync(cancellationToken)) ExecuteScalarAsync { while (reader.Read()) { configurationData.Add(reader.GetString(0), reader.GetString(1)); } } } return configurationData; } } public async Task<string> GetHashAsync(CancellationToken cancellationToken = default) { // The provider will use the maximum value of the \"modified_date\" column as a hash. // This will prevent the subsequent call to \"ReadDataAsync\" from happening as well as any possible object re-initialization // caused by a \"false\" configuration reload. using (var connection = new SqlConnection(_connectionString)) { connection.Open(); using (SqlCommand command = new SqlCommand(\"SELECT MAX(modified_date) FROM configuration_values\", connection)) { var lastModified = await command.ExecuteScalarAsync<DateTime>(cancellationToken); return lastModified.ToString(\"O\"); } } } } Using the provider Now that you have the configuration data provider created you need to: Define an options class to use the options pattern . Register the provider in you application start-up. // Class used to bind via the options pattern. public class ParallelProcessingOptions { public bool Enabled { get; set; } public int MaxThreads { get; set; } } // Extension method to make registration easier. public static class ConfigurationBuilderExtensions { public static IConfigurationBuilder AddDbConfiguration(this IConfigurationBuilder builder, string sectionName) { // Build a temporary configuration so you can read the necessary values. var tempConfig = builder.Build(); var connectionString = tempConfig.GetConnectionString(\"ConfigurationDatabaseConnectionString\"); return builder.AddCustomConfiguration(source => { source.DataProvider = new DbConfigurationValuesDataProvider(connectionString); source.Options.PoolingInterval = TimeSpan.FromHours(24); source.Options.HandleLoadException = (ctx) => { Console.WriteLine(ctx.Exception); // In a real application you could ignore timeout exceptions and not stop the pooling but you might // want to stop pooling and not ignore if it's an authentication/authorization exception. return new LoadExceptionHandlerResult { // For this demo it is OK to ignore the error if this is happening while reloading the configuration. IgnoreException = ctx.Reload, // If you want to stop pooling for configuration changes in case of an error set this to true. DisablePooling = false }; }; source.Options.Prefix = sectionName; }); } } const string configurationSectionName = \"ParallelProcessing\"; var host = Host.CreateDefaultBuilder(args) .ConfigureAppConfiguration((_, configuration) => { // Register the configuration provider. configuration.AddDbConfiguration(configurationSectionName); }) .ConfigureServices((context, services) => // Bind the options. services.Configure<ParallelProcessingOptions>(context.Configuration.GetSection(configurationSectionName)) ) .Build(); await host.RunAsync(); To take advantage of the reload functionality of the configuration provider and have the latest configuration values you should not use an instance of ParallelProcessingOptions but instead use IOptionsSnapshot<ParallelProcessingOptions> or IOptionsMonitor<ParallelProcessingOptions> . For more details see the official documentation . Advanced usage Depending on the storage you will use you might have cases where your IDataProvider implementation will return the data in a more compact format: key value CentralConfiguration/SectionA { \"foo\": 1, \"bar\": 2, \"buzz\": 3} CentralConfiguration/SectionB { \"foo\": { \"bar\": \"buzz\" } To allow the data provider to correctly parse the values you can change the following options: // This will transform \"CentralConfiguration/SectionA\" to \"CentralConfiguration:SectionA\". source.Options.OriginalKeyDelimiter = \"/\"; // This will go through the JSON properties and create a linear set ov values. source.Options.ConfigurationParser = new JsonConfigurationParser(ConfigurationPath.KeyDelimiter); With the above options added to the configuration the parsed values are: key value CentralConfiguration:SectionA:foo 1 CentralConfiguration:SectionA:bar 2 CentralConfiguration:SectionA:buzz 3 CentralConfiguration:SectionB:foo:bar buzz"
  },
  "articles/redis-message-bus.html": {
    "href": "articles/redis-message-bus.html",
    "title": "Redis message bus | Adaptive Architecture Common Utilities",
    "keywords": "Redis message bus For some simple pub/sub workload it might be enough to use a Redis based implementation of IMessageHub or IMessageHubAsync . Service registration To get to run using Reid all you need to do is: Register a IConnectionMultiplexer instance with the dependency container. Register the RedisMessageHubOptions with the dependency container. Register the RedisMessageHub or IMessageHubAsync with the dependency container. // Minimal API example. var builder = WebApplication.CreateBuilder(args); var app = builder.Build(); builder.Services.AddSingleton<IConnectionMultiplexer>(ConnectionMultiplexer.Connect(\"localhost:6379\")); builder.Services.AddSingleton(new RedisMessageHubOptions { // DataSerializer = new CustomDataSerializer() -- You can override the default serializer (JsonDataSerializer) if you wish to. }); // Preferred way. builder.Services.AddSingleton<IMessageHubAsync, RedisMessageHub>(); // OR builder.Services.AddSingleton<IMessageHub, RedisMessageHub>(); // OR builder.Services .AddSingleton<RedisMessageHub>() .AddSingleton<IMessageHub>(svc => svc.GetService<RedisMessageHub>()) .AddSingleton<IMessageHubAsync>(svc => svc.GetService<RedisMessageHub>()) services.AddSingleton<MyMessageHandler>(); // Start listening. app.MapGet(\"/start-listening\", static async (MyMessageHandler handler, CancellationToken token) => { await handler.StartListeningAsync(token); return Results.Ok(); }); // Stop listening. app.MapGet(\"/stop-listening\", static async (MyMessageHandler handler, CancellationToken token) => { await handler.StopListeningAsync(token); return Results.Ok(); }); // Publish messages. app.MapGet(\"/publish\", static async (MyMessageHandler handler, CancellationToken token) => { await handler.PublishAsync(new SayHello { Name = \"Marco\" }, token); return Results.Ok(); }); app.Run(); Usage To use the message hub in your business manager all you need to do is: Inject a reference to the message hub. Subscribe to the messages you are interested in. Publish the messages you need to. Optionally unsubscribe from the messages you are no longer interested in. public class SayHello { public string Name { get; set; } } public class MyMessageHandler { private readonly IMessageHubAsync _messageHub; private const string MessageName = \"WELCOME_GUESTS\"; private string subscriptionId; public MyMessageHandler(IMessageHubAsync messageHub) { _messageHub = messageHub; } public Task StartListeningAsync(CancellationToken cancellationToken) { // Store the subscriptionId so we can latter unsubscribe. subscriptionId = _messageHub.Subscribe<SayHello>(MessageName, (m, _) => HandleMessageAsync(m.Data, CancellationToken.None)); } public Task StopListeningAsync(CancellationToken cancellationToken) { // Use the subscription id to unsubscribe. _messageHub.Unsubscribe(subscriptionId); } public Task PublishAsync(SayHello command, CancellationToken cancellationToken) { _messageHub.Publish(MessageName, command); } private Task HandleMessageAsync(SayHello command, CancellationToken cancellationToken) { // You will have more advanced logic than this Console.WriteLine($\"Welcome {command.Name}\"); return Task.CompletedTask; } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Common Utilities | Adaptive Architecture Common Utilities",
    "keywords": "Common Utilities These packages contain a small set of utilities to use in your projects in order for you to focus on the business instead of boilerplate code. Package description The following packages are available. AdaptArch.Common.Utilities Common utilities functions and contracts. This is a dependency free package. AdaptArch.Common.Utilities.Configuration Integrations and extensions for Microsoft.Extensions.Configuration . AdaptArch.Common.Utilities.Redis Integrations and extensions for Redis built on top of StackExchange.Redis ."
  }
}